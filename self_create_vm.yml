---
- name: Create VM on Nutanix
  hosts: localhost
  gather_facts: false

  vars:
    prism: "192.168.39.39"
    prism_user: "admin"
    prism_password: "P@ssw0rd1234"
    validate_certs: false
    golden_image_name: "Windows 2019"
    subnet_name: "39"
    cluster_name: "infra"
    vm_name: "egyy"
    vm_cpu: 4
    vm_memory: 8
    network_uuid: "e1530106-3d95-4d13-a232-37d447d8f0ed"
    storage_container_uuid: "47d5155f-ebe6-4fbc-b2e3-1dc44222856a"
    disk_size_bytes: 4563402752

  tasks:
    - name: Retrieve Information of Golden Image
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/images/list"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: |
          {
            "filter": "name=={{ golden_image_name }}"
          }
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        return_content: true
      register: golden_image

    - name: Debug Golden Image
      debug:
        var: golden_image.json

    - name: Retrieve Information for Subnet
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/subnets/list"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: |
          {
            "filter": "name=={{ subnet_name }}"
          }
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        return_content: true
      register: vm_subnet

    - name: Debug Subnet
      debug:
        var: vm_subnet.json

    - name: Retrieve Information of Cluster
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/clusters/list"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: |
          {
            "filter": "name=={{ cluster_name }}"
          }
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        return_content: true
      register: cluster_info

    - name: Debug Cluster Info
      debug:
        var: cluster_info.json

    - name: Create VM
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/vms"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: POST
        body: |
          {
            "spec": {
              "name": "{{ vm_name }}",
              "resources": {
                "memory_size_mib": {{ vm_memory * 1024 }},
                "num_vcpus_per_socket": {{ vm_cpu }},
                "num_sockets": 1,
                "disk_list": [
                  {
                    "data_source_reference": {
                      "kind": "image",
                      "uuid": "{{ golden_image.json.entities[0].metadata.uuid }}"
                    },
                    "disk_size_mib": {{ disk_size_bytes // 1024 // 1024 }}
                  }
                ],
                "nic_list": [
                  {
                    "subnet_reference": {
                      "kind": "subnet",
                      "uuid": "{{ vm_subnet.json.entities[0].metadata.uuid }}"
                    },
                    "is_connected": true
                  }
                ]
              },
              "cluster_reference": {
                "kind": "cluster",
                "uuid": "{{ cluster_info.json.entities[0].metadata.uuid }}"
              }
            },
            "api_version": "3.1",
            "metadata": {
              "kind": "vm"
            }
          }
        force_basic_auth: yes
        validate_certs: no
        body_format: json
        headers:
          Content-Type: application/json
        status_code: 202
        return_content: true
      register: vm_creation

    - name: Debug VM Creation
      debug:
        var: vm_creation.json

    - name: Get VM Attributes
      uri:
        url: "https://{{ prism }}:9440/api/nutanix/v3/vms/{{ vm_creation.json.metadata.uuid }}"
        user: "{{ prism_user }}"
        password: "{{ prism_password }}"
        method: GET
        force_basic_auth: yes
        validate_certs: no
        headers:
          Content-Type: application/json
        return_content: true
      register: get_vm_attributes
      retries: 10
      delay: 60
      until: get_vm_attributes.json.status.resources.nic_list[0].ip_endpoint_list[0].ip is defined

    - name: Debug VM Attributes
      debug:
        var: get_vm_attributes.json

    - name: Capture VM IP for subsequent workflow
      ansible.builtin.set_stats:
        data:
          vm_ip: "{{ get_vm_attributes.json.status.resources.nic_list[0].ip_endpoint_list[0].ip }}"
